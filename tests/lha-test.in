#!/bin/bash

: ${lha_dir=@top_builddir@/src}
: ${lha=$(cd $lha_dir && pwd)/lha}
: ${srcdir=@srcdir@}

trap "rm -rf test-*" 0 1 2 3 15

declare -i test_number=0 error_num=0
error_tests=""

exec > test.log

message() {
  echo "$@" >&2
  echo "$@"
}

check() {
  ((test_number = test_number + 1))
  local status=$1
  if [[ $status -eq 0 ]]; then
    message test $test_number ... ok
  else
    message test $test_number ... failed
    ((error_num = error_num + 1))
    error_tests="$error_tests #$test_number"
    result=1
  fi
}

seq() {
  awk 'BEGIN {
    for (i = 0; i < '$1'; i++) print i
  }'
}

cleanup()
{
  rm -rf test-tmp*
}

# create test data

message testing $lha
message testing to create/list/extract lha archive.

for i in `seq 100`
do
    echo foo >> test-a
done
sed 's/foo/bar/g' < test-a > test-b
sed 's/foo/baz/g' < test-a > test-c

$lha c test-1.lzh test-a test-b test-c
							check $?
test -s test-1.lzh
							check $?

$lha l test-1.lzh
							check $?

test -d test-1 || mkdir test-1
mv test-[abc] test-1
$lha x test-1.lzh
							check $?
diff test-1/test-a test-a
							check $?
diff test-1/test-b test-b
							check $?
diff test-1/test-c test-c
							check $?

# followings are test data for remaining tests.
test -f test-1.lzh &&
test -f test-a &&
test -f test-b &&
test -f test-c &&
test -d test-1 &&
test -f test-1/test-a &&
test -f test-1/test-b &&
test -f test-1/test-c
							check $?


. $srcdir/lha-test2; cleanup
. $srcdir/lha-test3; cleanup
. $srcdir/lha-test4; cleanup
. $srcdir/lha-test5; cleanup
# . $srcdir/lha-test6; cleanup		# this feature was removed.
. $srcdir/lha-test7; cleanup
. $srcdir/lha-test8; cleanup
case `$lha --version 2>&1` in
*pc-cygwin*|*pc-mingw*)
    message testing extracting to existent files ... skip;;
*)
#    . $srcdir/lha-test9; cleanup
    ;;
esac
. $srcdir/lha-test10; cleanup

if (( $error_num != 0 )); then
  echo $error_num tests failed! >&2
  echo test number: $error_tests >&2
fi

exit $result

# -*- Mode: text ; Coding: euc-japan -*-

autoconfiguration for LHa for UNIX version 1.14i
					Sun, May 19 2002 by Koji Arai

このファイルはLHa for UNIX version 1.14i をautoconf、automake化
した(autoconfiscate と言うそうです。Jargon 参照)ときのメモです。

LHa for UNIX に関しては岡本継男さんのページ
  <http://www2m.biglobe.ne.jp/~dolphin/lha/lha.htm>
を参照してください。

※ この版はまだβ版です。十分にテストされていません。もちろん
   無保証なので自己責任で使用してください。

・マクロの置き換え

  オリジナルのlha-1.14i で使われていたマクロはautoconf標準のマクロ名に
  置き換えられました。(IFNAMESファイルに詳細が書かれています)

  IFNAMESファイルは、
     マクロ名 定義のあるファイル...  コメント
  という構成になっています。このファイルはautoconfと一緒に配布される
  ifnamesコマンドの出力を元にしました。
  IFNAMESファイルの# で始まっている行は該当のマクロが置き換えられたり、
  configure コマンドのコマンドオプションで指定されるようになったことを
  示します。そのままの行はautoconfで判断する必要がないかまたは私が判断
  できないため、そのまま放置したことを示します。

・コンパイルの手順

  コンパイルの手順は以下のようになります。


    tar xvzf lha-1.14i.tar.gz
    cd lha-1.14i
    patch -p1 < ../lha-1.14i-autoconf.diff

    ./configure
    make
    make install

  MinGW 対応はα版です。ほとんどテストされていません(コンパイルを通し
  た程度)。Cygwin 環境で MinGW 版を試すには

    ./configure CC='gcc -mno-cygwin'
		--build=i686-pc-mingw32
		--with-tmp-file=no

  などとしてください。

・-lh6-, -lh7- メソッドのアーカイブ作成

  lha 1.14i では、SUPPORT_LH7の定義をせずにコンパイルした場合、-lh6- 
  および -lh7- メソッドのアーカイブを作成できませんでした。このことは
  別に構わないのですがSUPPORT_LH7を定義するとデフォルトで-lh7-メソッド
  のアーカイブ作成を強制されてしまいます。そこで、もう少し柔軟にlha利
  用者がこれらを選択できるようSUPPORT_LH7は常に定義するようにし、デフォ
  ルトで作成されるアーカイブのメソッド指定をconfigureオプションの 
  --with-default-method=[567] で指定できるようにしました。

  このオプションの省略値は -lh5- です。つまりデフォルトでは -lh5- アー
  カイブを作成します。(そして、上で述べた通り、lhaの o6 または o7 オプ
  ションによりいつでも-lh6-、-lh7- アーカイブを作成でき、configureオプ
  ションによりデフォルトの挙動を変更することができます)

・アーカイブ中の漢字ファイル名

  オリジナルのLha for UNIX はアーカイブに格納するファイル名の漢字コー
  ドに関して無頓着です。コンパイル時に MULTIBYTE_CHAR を定義したときでも
  アーカイブ中のShift JISファイル名をEUCにすることもなく、EUCコード
  のまま(正確にはシステムの漢字コードのまま)アーカイブに格納したりします。

  autoconf版では、configure オプション --enable-multibyte-char (デフォ
  ルト)により漢字ファイル名が使用でき、アーカイブに格納されるファイル名
  の漢字コードをSJISに、システムファイル名の漢字コードをEUCにしました。

  ※ Cygwin, MinGW, HP-UX では特別にシステムの漢字コードはSJISになります。

  configure のコマンドラインオプションによりシステムの漢字コードを指定
  できるように、そして lha のコマンドラインオプションによりアーカイブ、
  システムの各漢字コードを指定できるようにするつもりですが、今のところ
  header.cの冒頭にある XXX_kanji_code を書き換えてコンパイルしてくださ
  い。

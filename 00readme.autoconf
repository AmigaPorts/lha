# -*- Mode: text ; Coding: euc-japan -*-

autoconfiscated for LHa for UNIX version 1.14i
		        Sat, Jun  5 2002 by Koji Arai <jca02266@nifty.ne.jp>

このファイルはLHa for UNIX version 1.14i をautoconf、automake化
した(autoconfiscate と言うそうです。Jargon 参照)ときのメモです。

LHa for UNIX に関しては岡本継男さんのページ
  <http://www2m.biglobe.ne.jp/~dolphin/lha/lha.htm>
を参照してください。

※ この版はまだβ版です。十分にテストされていません。もちろん
   無保証なので自己責任で使用してください。

・マクロの置き換え

  オリジナルのlha-1.14i で使われていたマクロはautoconf標準のマクロ名に
  置き換えられました。(IFNAMESファイルに詳細が書かれています)

  IFNAMESファイルは、
     マクロ名 定義のあるファイル...  コメント
  という構成になっています。このファイルはautoconfと一緒に配布される
  ifnamesコマンドの出力を元にしました。
  IFNAMESファイルの# で始まっている行は該当のマクロが置き換えられたり、
  configure コマンドのコマンドオプションで指定されるようになったことを
  示します。そのままの行はautoconfで判断する必要がないかまたは私が判断
  できないため、そのまま放置したことを示します。

・コンパイルの手順

  コンパイルの手順は以下のようになります。

    tar xvzf lha-114i.tar.gz
    cd lha-114i
    patch -p1 < ../lha-1.14i-autoconf.diff

    sh ./configure
    make
    make check
    make install

  MinGW 対応はα版です。ほとんどテストされていません(make check が成功
  する程度)。Cygwin 環境で MinGW 版を試すには

    sh ./configure CC='gcc -mno-cygwin'
		--build=i686-pc-mingw32
		--with-tmp-file=no

  などとしてください。

  autoconf/automake がインストールされている場合で、lha ソースや 
  configure.ac, Makefile.am をメンテナンスする場合は以下の手順になりま
  す。autoconf/automake のバージョンはそれぞれ autoconf 2.5x, automake
  1.6.x 以降での利用を前提としています。(configure.in も用意しているの
  で autoconf 2.13 でもコンパイル可能かもしれませんが、あまり動作確認
  されていません。configure.in はいずれ保守されなくなるかもしれません)

    tar xvzf lha-114i.tar.gz
    cd lha-114i
    patch -p1 < ../lha-1.14i-autoconf.diff

    aclocal
    automake -a
    autoheader
    autoconf
    sh ./configure
    make
    make check
    make install

・-lh6-, -lh7- メソッドのアーカイブ作成

  lha 1.14i では、SUPPORT_LH7の定義をせずにコンパイルした場合、-lh6- 
  および -lh7- メソッドのアーカイブを作成できませんでした。このことは
  別に構わないのですがSUPPORT_LH7を定義するとデフォルトで-lh7-メソッド
  のアーカイブ作成を強制されてしまいます。そこで、もう少し柔軟にlha利
  用者がこれらを選択できるようSUPPORT_LH7は常に定義するようにし、デフォ
  ルトで作成されるアーカイブのメソッド指定をconfigureオプションの 
  --with-default-method=[567] で指定できるようにしました。

  このオプションの省略値は -lh5- です。つまりデフォルトでは -lh5- アー
  カイブを作成します。(そして、上で述べた通り、lhaの o6 または o7 オプ
  ションによりいつでも-lh6-、-lh7- アーカイブを作成でき、configureオプ
  ションによりデフォルトの挙動を変更することができます)

・アーカイブ中の漢字ファイル名

  オリジナルのLHa for UNIX はアーカイブに格納するファイル名の漢字コー
  ドに関して無頓着です。コンパイル時に MULTIBYTE_CHAR を定義したときでも
  アーカイブ中のShift JISファイル名をEUCにすることもなく、EUCコード
  のまま(正確にはシステムの漢字コードのまま)アーカイブに格納したりします。

  autoconf版では、configure オプション --enable-multibyte-filename (デフォ
  ルト)により漢字ファイル名が使用でき、アーカイブに格納されるファイル名
  の漢字コードをSJISに、システムファイル名の漢字コードをEUCにしました。

  ※ Cygwin, MinGW, HP-UX では特別にシステムの漢字コードはSJISになります。

  configure のコマンドラインオプションによりシステムの漢字コードを指定
  できるように、そして lha のコマンドラインオプションによりアーカイブ、
  システムの各漢字コードを指定できるようにするつもりですが、今のところ
  header.cの冒頭にある XXX_kanji_code を書き換えてコンパイルしてくださ
  い。

・標準入力からの展開ファイルの指定

  オリジナルのLHa for UNIX は、

    echo foo.txt | lha x bar.lzh

  とすると、bar.lzh から foo.txt だけを展開します。つまり、標準入力か
  ら、展開ファイルを指定できる機能なのですが、いまいち使い道がないわり
  に邪魔な機能です。tty からの利用しか想定してないと思われますが、おそ
  らく daemon から lha を実行する場合などで意図しない動作をするでしょ
  う。そういうわけで勝手ながらこの機能は削除しました。
  以下のような事ができない Windows 環境では意味のある機能だったかもし
  れませんが

    lha x bar.lzh `echo foo.txt`

  残念ながら MinGW で isatty() がうまく動作しませんでしたから結局使え
  ないのでした。

・拡張ヘッダ(ユーザ名/グループ名)のサポート

  ユーザ名、グループ名の拡張ヘッダ(0x52, 0x53)を作成できるようにしまし
  た(デフォルトはoff)。詳細は header.doc.euc を参照してください。展開
  と一覧表示のときにヘッダにこの情報があれば ID に優先してこの情報が利
  用されます。作成は configure オプション --enable-user-name-header を
  指定して build したときに有効になります。
